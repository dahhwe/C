\hypertarget{main_8c}{}\section{main.\+c File Reference}
\label{main_8c}\index{main.\+c@{main.\+c}}


Код родительского процесса программы  


{\ttfamily \#include $<$stdio.\+h$>$}\newline
{\ttfamily \#include $<$stdlib.\+h$>$}\newline
{\ttfamily \#include $<$sys/types.\+h$>$}\newline
{\ttfamily \#include $<$sys/wait.\+h$>$}\newline
{\ttfamily \#include $<$unistd.\+h$>$}\newline
Include dependency graph for main.\+c\+:
% FIG 0
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
int \hyperlink{main_8c_a789b9483e76881cfcca6ce0c3e7a7367}{spawn} (char $\ast$program, char $\ast$$\ast$arg\+List)
\item 
int \hyperlink{main_8c_ae66f6b31b5ad750f1fe042a706a4e3d4}{main} ()
\end{DoxyCompactItemize}


\subsection{Detailed Description}
Код родительского процесса программы 



\subsection{Function Documentation}
\mbox{\Hypertarget{main_8c_ae66f6b31b5ad750f1fe042a706a4e3d4}\label{main_8c_ae66f6b31b5ad750f1fe042a706a4e3d4}} 
\index{main.\+c@{main.\+c}!main@{main}}
\index{main@{main}!main.\+c@{main.\+c}}
\subsubsection{\texorpdfstring{main()}{main()}}
{\footnotesize\ttfamily int main (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})}

Основная точка входа программы \begin{DoxyReturn}{Returns}
Код завершения программы 
\end{DoxyReturn}
\mbox{\Hypertarget{main_8c_a789b9483e76881cfcca6ce0c3e7a7367}\label{main_8c_a789b9483e76881cfcca6ce0c3e7a7367}} 
\index{main.\+c@{main.\+c}!spawn@{spawn}}
\index{spawn@{spawn}!main.\+c@{main.\+c}}
\subsubsection{\texorpdfstring{spawn()}{spawn()}}
{\footnotesize\ttfamily int spawn (\begin{DoxyParamCaption}\item[{char $\ast$}]{program,  }\item[{char $\ast$$\ast$}]{arg\+List }\end{DoxyParamCaption})}

Создаёт новый дочерний поток методом fork-\/and-\/exec 
\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in}  & {\em program} & Имя программы для запуска в дочернем процессе \\
\hline
\mbox{\tt in}  & {\em arg\+List\mbox{[}$\,$\mbox{]}} & Список аргументов для запуска дочерней программы  P\+ID дочернего процесса \\
\hline
\end{DoxyParams}
